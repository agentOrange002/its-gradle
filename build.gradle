plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'com.palantir.docker' version '0.25.0'		
	id 'com.palantir.docker-compose' version '0.25.0'
	id 'com.palantir.docker-run' version '0.25.0'
}

group = 'sys.app'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven{url "http://jasperreports.sourceforge.net/maven2/"}
    maven{url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/"}
}

docker {
	name "its"
	dockerfile file('src/docker/Dockerfile')
	copySpec.from(jar).rename(".*","app.jar")
	buildArgs(['JAR_FILE': "app.jar"])
}

dockerCompose {
    template 'src/docker/docker-compose.yml'
    dockerComposeFile 'docker-compose.yml'
}

dockerRun {
    name 'its-spring'
    image 'its'
   // volumes 'hostvolume': '/containervolume'
    //ports '7080:5000'
    //daemonize true
    //env 'MYVAR1': 'MYVALUE1', 'MYVAR2': 'MYVALUE2'
    //command 'sleep', '100'
    arguments '--net=host', '-it'
}

dependencies {	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'	
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml' 
	implementation 'org.modelmapper:modelmapper:2.3.8'
	implementation 'net.sf.jasperreports:jasperreports:6.12.2'		
	implementation 'org.springdoc:springdoc-openapi-ui:1.4.8'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'com.sun.mail:javax.mail:1.6.2'	
	compile group: 'xerces', name: 'xercesImpl', version: '2.12.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testCompile group: 'org.mockito', name: 'mockito-core', version: '3.6.28'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources"
        }
    }
}
